{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n  if (right === void 0) {\n    right = false;\n  }\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n    return msg.slice(-length);\n  }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n  a = ethjsUtil.stripHexPrefix(a);\n  var first = a[0];\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n  return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (ethjsUtil.isHexString(v)) {\n        v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n      } else {\n        throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n      }\n    } else if (typeof v === 'number') {\n      v = ethjsUtil.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return \"0x\" + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n    return array;\n  }\n};","map":{"version":3,"names":["ethjsUtil","require","BN","exports","zeros","bytes","Buffer","allocUnsafe","fill","setLengthLeft","msg","length","right","buf","toBuffer","copy","slice","setLength","setLengthRight","unpad","a","stripHexPrefix","first","toString","stripZeros","v","isBuffer","Array","isArray","from","isHexString","padToEven","Error","intToBuffer","undefined","isBN","toArrayLike","toArray","bufferToInt","toNumber","bufferToHex","fromSigned","num","fromTwos","toUnsigned","toTwos","addHexPrefix","str","isHexPrefixed","baToJSON","ba","array","i","push"],"sources":["../src/bytes.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}